#include <Wire.h>             // Untuk komunikasi I2C
#include <LiquidCrystal_I2C.h> // Pustaka untuk LCD I2C

// Deklarasi objek LCD
LiquidCrystal_I2C lcd(0x27, 16, 2);  // 0x27 adalah alamat I2C, 16 adalah lebar LCD, 2 adalah tinggi LCD

// Pin Relay
const int relayPompa = 5;      // Relay untuk pompa
const int relaySolenoid = 6;   // Relay untuk solenoid valve

// Sensor Pin
const int flowPin = 2;         // Pin sensor waterflow
const int trigPin = 9;         // Pin trig sensor ultrasonik
const int echoPin = 13;        // Pin echo sensor ultrasonik

volatile int pulseCount = 0;   // Hitungan pulsa sensor waterflow
bool isFlowing = false;        // Status air mengalir
unsigned long flowStartTime = 0;  // Waktu mulai mendeteksi aliran
const unsigned long flowThreshold = 3000; // 3 detik dalam milidetik
const float tankHeight = 19.0; // Tinggi tangki dalam cm

// Fungsi interrupt untuk sensor waterflow
void pulseCounter() {
  pulseCount++;
}

void setup() {
  // Setup pin relay
  pinMode(relayPompa, OUTPUT);
  pinMode(relaySolenoid, OUTPUT);

  // Matikan semua relay di awal
  digitalWrite(relayPompa, LOW); 
  digitalWrite(relaySolenoid, LOW);

  // Setup pin sensor waterflow dan ultrasonic
  pinMode(flowPin, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(flowPin), pulseCounter, FALLING);

  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);

  // Setup LCD
  lcd.init();          // Inisialisasi LCD
  lcd.backlight();     // Hidupkan backlight

  // Serial Monitor (opsional)
  Serial.begin(9600);
}

void loop() {
  // ===== Sensor Waterflow =====
  int pulses = pulseCount;  // Simpan jumlah pulsa
  pulseCount = 0;           // Reset hitungan

  // Jika ada pulsa, mulai hitung waktu aliran
  if (pulses > 0) {
    if (flowStartTime == 0) {
      // Mulai hitung waktu ketika aliran pertama kali terdeteksi
      flowStartTime = millis();
    }
  } else {
    // Reset waktu jika tidak ada aliran
    flowStartTime = 0;
    isFlowing = false;
  }

  // Jika sudah 3 detik aliran terus-menerus, set status sebagai Mengalir
  if (flowStartTime != 0 && millis() - flowStartTime >= flowThreshold) {
    isFlowing = true;
  }

  // ===== Sensor Ultrasonik =====
  long duration;
  float distance;

  // Kirim pulsa Trig
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  // Hitung durasi pantulan Echo
  duration = pulseIn(echoPin, HIGH);
  distance = duration * 0.034 / 2; // Konversi durasi ke jarak (cm)

  // Hitung persentase volume tangki terisi
  float percentage = 0;
  if (distance < tankHeight) {
    percentage = ((tankHeight - distance) / 17) * 100.0;
  }

  // ===== Kontrol Relay =====
  if (isFlowing) {
    digitalWrite(relayPompa, HIGH); // Aktifkan pompa jika air mengalir selama lebih dari 3 detik
  } else {
    digitalWrite(relayPompa, LOW);  // Matikan pompa jika air tidak mengalir
  }

  if (distance < 5) {
    digitalWrite(relaySolenoid, HIGH); // Aktifkan solenoid jika jarak kurang dari 5 cm
  } else {
    digitalWrite(relaySolenoid, LOW);  // Matikan solenoid jika jarak lebih dari 5 cm
  }

  // ===== Tampilan di LCD =====
  lcd.setCursor(0, 0); // Baris pertama
  lcd.print("     Tangki    ");

  lcd.setCursor(0, 1); // Baris kedua
  lcd.print("Air Terisi: ");
  lcd.print(percentage,0  );
  lcd.setCursor(15, 1); // Baris kedua
  lcd.print("%"); // Spasi untuk membersihkan sisa teks sebelumnya

  
  // ===== Serial Monitor =====
  Serial.print("Status Air: ");
  Serial.println(isFlowing ? "Mengalir" : "Tidak");
  Serial.print("Jarak: ");
  Serial.print(distance);
  Serial.println(" cm");
  Serial.print("Persentase: ");
  Serial.print(percentage);
  Serial.println("%");


  delay(1000); // Tunggu 1 detik
  // Bersihkan layar
  lcd.clear();
}
